{"version":3,"sources":["components/header/header.js","attachments/Close.svg","components/new-comment/new-comment.js","components/modal-window/modal-window.js","components/body/body.js","App.js","index.js"],"names":["Header","className","NewComment","defaultValue","getter","setter","placeholder","value","min","type","onChange","event","target","required","autoFocus","ModalWindow","photoId","onCloseModal","useState","modalWindowData","setModalWindowData","fetchData","fetch","then","res","json","data","useEffect","name","setName","yourComment","setYourComment","inputs","onKeyUp","keyCode","console","log","tabIndex","onClick","src","url","comments","map","i","unixTimeStamp","date","Date","toLocaleDateString","text","CloseIcon","commentData","JSON","stringify","method","headers","body","onSend","Body","setPhotoId","isShowModal","setIsShowModal","photos","setPhotos","id","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d6cc28c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './header.css';\r\n\r\n\r\nexport const Header = () => {\r\n  return(\r\n    <div className={'header'}>\r\n      <h1 className={'header1'}>\r\n        Test app\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Close.63feaaed.svg\";","import React from \"react\";\r\nimport './new-comment.css';\r\n\r\n\r\nexport const NewComment = ({defaultValue, getter, setter}) => {\r\n\r\n  const onInputChange = (event) => {\r\n    const value = event.target.value\r\n\r\n    setter(value)\r\n  }\r\n\r\n    return (\r\n        <div className={'new-comment'}>\r\n            <input\r\n              className={'input-comments'}\r\n              placeholder={defaultValue}\r\n              value={getter}\r\n              min={1}\r\n              type=\"text\"\r\n              onChange={onInputChange}\r\n              required\r\n              autoFocus={'getter'}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './modal-window.css';\r\nimport CloseIcon from '../../attachments/Close.svg';\r\nimport {NewComment} from \"../new-comment/new-comment\";\r\n\r\nexport const ModalWindow = ({photoId, onCloseModal}) => {\r\n\r\n  const [modalWindowData, setModalWindowData] = useState(null)\r\n\r\n  const fetchData = () => {                                         // Запрос на выбраную фотографию\r\n    fetch('https://boiling-refuge-66454.herokuapp.com/images/' + photoId)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setModalWindowData(data)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [photoId])\r\n\r\n  const parseDate = (unixTimeStamp) => {                                    // Время\r\n    return new Date(unixTimeStamp).toLocaleDateString()\r\n  }\r\n\r\n  const [name, setName] = useState('');\r\n  const [yourComment, setYourComment] = useState('')\r\n\r\n  const inputs = [                                                      // Комментярий пользователя (новый)\r\n    {\r\n      defaultValue: 'Ваше имя',\r\n      getter: name,\r\n      setter: setName,\r\n    },\r\n    {\r\n      defaultValue: 'Ваш комментарий',\r\n      getter: yourComment,\r\n      setter: setYourComment,\r\n    }\r\n  ]\r\n\r\n  const onSend = (name, yourComment) => {\r\n\r\n    const commentData = {\r\n      name: name,\r\n      yourComment: yourComment\r\n    }\r\n    const url = 'https://boiling-refuge-66454.herokuapp.com/images/:imageId/comments'\r\n\r\n    console.log(JSON.stringify(commentData))        //Проверка\r\n\r\n    fetch(url, {                                  //Отправка нового коммента\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(commentData)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        fetchData()\r\n      })\r\n  }\r\n  //\r\n  const handleKeyPress = (event) => {\r\n    if(event.keyCode === 27){\r\n      onCloseModal()\r\n    } else\r\n    console.log('Нажми Esc для выхода')\r\n  }\r\n\r\n    //\r\n    return (\r\n        <div className={'modal-window'}\r\n             onKeyUp={handleKeyPress}\r\n             tabIndex=\"1\"\r\n        >\r\n          <div\r\n            className={'black-div'}\r\n            onClick={onCloseModal}\r\n          />\r\n\r\n          {\r\n            (modalWindowData !== null)\r\n              ? (\r\n                <div className=\"content\">\r\n                  <img\r\n                    className={'modal-picture'}\r\n                    src={modalWindowData.url}\r\n                  />\r\n\r\n                  <div className={'modal-comment-container'}>\r\n                    {\r\n                      modalWindowData.comments.map(i => (\r\n                        <div className={'modal-comment-item'}>\r\n                          <div className={\"modal-comment-date\"}>\r\n                            {\r\n                              parseDate(i.date)\r\n                            }\r\n                          </div>\r\n                          <div className={'modal-comment'}>\r\n                            {\r\n                              i.text\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    }\r\n                  </div>\r\n\r\n                  <button\r\n                    className={'modal-close-btn'}\r\n                    onClick={onCloseModal}\r\n                  >\r\n                    <img\r\n                      src={CloseIcon}\r\n                    />\r\n                  </button>\r\n\r\n                  <div className={'modal-new-comment'}>\r\n                    {\r\n                      inputs.map(i => (\r\n                        <NewComment\r\n                          defaultValue={i.defaultValue}\r\n                          getter={i.getter}\r\n                          setter={i.setter}\r\n                        />\r\n                      ))\r\n                    }\r\n\r\n                    <button\r\n                      className={'send-comment-btn'}\r\n                      onClick={() => onSend(name, yourComment)}\r\n                    >\r\n                      Оставить комментарий\r\n                    </button>\r\n\r\n                  </div>\r\n                </div>\r\n              )\r\n              : null\r\n          }\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './body.css';\r\nimport './body.sass'\r\nimport {ModalWindow} from \"../modal-window/modal-window\";\r\n\r\n\r\nexport const Body = ({}) => {\r\n\r\n    const [photoId, setPhotoId] = useState([])\r\n    const [isShowModal, setIsShowModal] = useState(false)\r\n\r\n    const choosePhoto = (id) => {\r\n        setPhotoId(id)\r\n        setIsShowModal(true)\r\n    }\r\n\r\n    const [photos, setPhotos] = useState([])\r\n\r\n    const gettingPictures = () => {                                      //Получение всех картинок (запрос на сервер)\r\n        fetch('https://boiling-refuge-66454.herokuapp.com/images')\r\n          .then(res => res.json())\r\n          .then(data => {\r\n              setPhotos(data)\r\n          })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        gettingPictures()\r\n    }, [])\r\n\r\n\r\n    const onCloseModal = () => {\r\n        setIsShowModal(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'body test-bg'}>\r\n            {\r\n                (isShowModal)\r\n                  ? <ModalWindow onCloseModal={onCloseModal} photoId={photoId} />\r\n                  : null\r\n            }\r\n\r\n            {\r\n              photos.map(i => (\r\n                <div\r\n                  className={'photo-container'}\r\n                  onClick={() => choosePhoto(i.id)}\r\n                >\r\n                    <img className={'image-item'}\r\n                      key={i.id}\r\n                      src={i.url}\r\n                    />\r\n                </div>\r\n              ))\r\n            }\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport {Header} from \"./components/header/header\";\nimport {Body} from \"./components/body/body\";\nimport {Hello} from \"./components/hello\";\n\nexport const App = () => {\n\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Body />\n      {/*<Hello />*/}\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}